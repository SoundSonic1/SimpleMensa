version: 2.1

orbs:
  android: circleci/android@1.0.3
  sonarcloud: sonarsource/sonarcloud@1.0.2

jobs:
  test:
    executor:
      name: android/android-machine

    steps:
      - checkout
      - run:
          name: Create secrets
          command: echo $GOOGLE_SERVICES | base64 -di > app/google-services.json
      - android/start-emulator-and-run-tests:
          test-command: ./gradlew jacocoFullTestReport
      - run:
          name: Run klintCheck
          command: ./gradlew ktlintCheck
      - persist_to_workspace:
          root: .
          paths: app/build/reports

  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-30
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x ./gradlew
      - run:
          name: Create secrets
          command: echo $GOOGLE_SERVICES | base64 -di > app/google-services.json
      - run: echo $KEY_PROPERTIES | base64 -di > app/key.properties
      - run: echo $KEY_STORE | base64 -di > app/upload-keystore.jks
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Compile apk
          command: ./gradlew assembleRelease
      - run:
          name: Copy apk
          command: cp app/build/outputs/apk/release/app-release.apk app-release.apk
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
      - persist_to_workspace:
          root: .
          paths: .
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
  deploy:
    working_directory: ~/code
    docker:
      - image: cimg/node:16.1.0
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Install firebase tools
          command: npm install -D firebase-tools
      - run:
          name: Upload apk
          command: ./node_modules/.bin/firebase appdistribution:distribute app-release.apk --app 1:672693801281:android:705e0fff90a5e3183ad1c0 --release-notes-file release-notes.md --groups "intern" --token "$FIREBASE_TOKEN"
  sonarcloud-check:
    docker:
      - image: 'node:latest'
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - sonarcloud/scan

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - build:
          filters:
            branches:
              only:
                - master
      - sonarcloud-check:
          requires:
            - test
          filters:
            branches:
              only:
                - develop
      - deploy:
          requires:
            - test
            - build
          filters:
            branches:
              only:
                - master